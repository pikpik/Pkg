#!/bin/sh

pkgsrc=/usr/pkgsrc

build () {
	(
		cd $pkgsrc/$1

		cleanpkgs

		bmake $2 2>&1 | tee build.log

		echo
		echo -e "\tA log is available $1/build.log."

		cleanpkgs
	)
}

cleanpkgs () {
	rm -rf $pkgsrc/work
}

needsPkgTarup () {
	if ! which pkg_tarup 1>/dev/null 2>/dev/null
	then
		echo 'Please install pkg_tarup.'
		echo
		echo "It's needed for removing and updating packages."
		echo

		exit
	fi
}

packagesLikeName () {
	available \
	| grep -i "/*$1"
}

packagesByName () {
	available \
	| grep -i "/$1$"
}

count () {
	sed '/^$/d' \
	| wc -l \
	| sed 's/ //g'
}

optionExists () {
	if [ "x$package" = "x" ]
	then
		echo "Please specify a package."
		echo

		exit 1
	fi
}

useOrSuggest () {
	next=$1
	package=$2

	optionExists $package || exit

	if [ -f $pkgsrc/$package/DESCR ]
	then
		package=$package $next

		echo

		exit
	fi

	matches=`packagesByName $package`

	number=`echo -e "$matches" | count`

	case $number in
		0)
			matches=`packagesLikeName $package`

			number=`echo -e "$matches" | count`

			case $number in
				0)
					echo 'Not found.'
				;;

				1)
					package=$matches $next
				;;

				*)
					echo 'Did you mean one of these?'
					echo
					echo -e "$matches"
				;;
			esac
		;;

		1)
			package=$matches $next
		;;

		*)
			echo 'Did you mean one of these?'
			echo
			echo -e "$packages"
		;;
	esac
}

install () {
	echo "Installing $package..."
	echo

	build $package bin-install
}

installed () {
	pkg_info -Q PKGPATH '*' \
	| sort
}

uninstall () {
	echo "Uninstalling $package..."
	echo

	build $package deinstall
}

update () {
	needsPkgTarup

	echo "Updating $package..."
	echo

	build $package replace
}

available () {
	echo $pkgsrc/*/* \
	| tr " " "\n" \
	| sed "
		s@^$pkgsrc/@@
		/^mk/d
		/^doc/d
		/^licenses/d
		/^bootstrap/d
		/^distfiles/d
		/^packages/d
		/^regress/d
		/^templates/d
		/Makefile$/d
	"
}

about () {
	cat $pkgsrc/$package/DESCR
}

search () {
	optionExists $package || exit
 
	available \
	| grep -i $package
}

help () {
	echo -e "ind\tinstalled"
	echo -e "av\tavailable"
	echo -e "in\tinstall\t\tpackage"
	echo -e "un\tuninstall\tpackage"
	echo -e "up\tupdate\t\tpackage"
	echo -e "s\tsearch\t\tpackage"
	echo -e "a\tabout\t\tpackage"
	echo -e "h\thelp"
}

options () {
	case $1 in
		ind|installed)	installed			;;
		av|available)	available			;;
		in|install)	useOrSuggest install $2		;;
		un|uninstall)	useOrSuggest uninstall $2	;;
		up|update)	useOrSuggest update $2		;;
		s|search)	package=$2 search		;;
		a|about)	useOrSuggest about $2		;;
		h|help|*)	help				;;
	esac
}

echo

options $@

echo